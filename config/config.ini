[DEFAULT]
network_cnt = 10
subnet_cnt = 10
instance_cnt = 10
securitygroup_cnt = 10
rule_cnt = 10
router_cnt = 10
report_path =
; Day, Hour, Min, Sec
report_format = Day
log_collector_wait_time = 1
ssh_conn_timeout = 5
floating_ip_check_timeout = 10
onos_get_timeout = 2
; test_mode : continue or braek
;test_mode = break
state_check_result_skip_mode = True
wget_url = "http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img"
;wget_url = "http://www.telcoware.com/kor_160518/image/product/diagram020101.jpg"
;wget_url = "http://releases.ubuntu.com/raring/ubuntu-13.04-server-amd64.iso"

[onos]
user_id = karaf
password = karaf
ssh_port = 8101
#onos_list = 10.10.2.34, 10.10.2.35, 10.10.2.36
onos_service_ip = 10.10.2.46
onos_list = 10.10.2.46, 10.10.2.47, 10.10.2.48
os_username = root
os_password = root
onos_logfile = /opt/onos/log/karaf*.log
app_list = openstacknetworking,scalablegateway,openstacknode
;onos_logfile = ~/Applications/apache-karaf-3.0.5/data/log/karaf.log
;log_collector = False

[openstack]
os_username = root
os_password = root
;controller_ip = 172.16.130.11
;controller_ip = 10.10.2.31
controller_ip = 10.10.2.41
log_files = /var/log/neutron/*.log, /var/log/nova/*.log
log_collector = False
version = 2
username = admin
# api_key is password of admin
api_key = admin
# project_id is tenant_id
project_id = admin
auth_url = http://controller:5000/v2.0

[identity]
version = 2
username = tsona
password = tsona
tenant_id = tsona
role = admin
auth_url = http://controller:5000/v2.0

[network]
; network configuration example
;  - network: (mandatory)
;  - name: (option:string)
;  - admin_state_up:  (option:boolean) The administrative state of the network
;  - provider:network_type: (option:vxlan,flat,vlan..)
;  - provider:segmentation_id: (option:int) Vlan or Vxlan ID
;  - router:external: (option:boolean) Indicates whether this network is externally accessible.

network1 = {'name': 'ext-net',
            'admin_state_up': True,
            'router:external': True,
            'provider:network_type': 'flat',
            'provider:physical_network': 'external'}

network2 = {'name': 'test_net1',
            'admin_state_up': True,
            'provider:network_type': 'vxlan',
            'provider:segmentation_id': 1024}

network3 = {'name': 'test-net2',
            'admin_state_up': True,
            'provider:network_type': 'vxlan',
            'provider:segmentation_id': 1025}

network4 = {'name': 'test-net1',
            'admin_state_up': True,
            'provider:network_type': 'vxlan',
            'provider:segmentation_id': 1027}

network5 = {'name': 'net2',
            'admin_state_up': True,
            'provider:network_type': 'vxlan',
            'provider:segmentation_id': 1028}

[subnet]
subnet1 = {'name': 'ext-subnet',
           'cidr': '192.168.1.0/24',
           'gateway_ip': '192.168.1.1',
           'allocation_pools':[{'start':'192.168.1.151','end':'192.168.1.199'}],
           'ip_version': 4}

subnet2 = {'name': '172.1.1-subnet',
           'cidr': '172.1.1.0/24',
           'gateway_ip': '172.1.1.1',
           'ip_version': 4}

subnet3 = {'name': '172.2.1-subnet',
           'cidr': '172.2.1.0/24',
           'gateway_ip': '172.2.1.1',
           'ip_version': 4}

subnet4 = {'name': 'test-subnet2',
           'cidr': '172.2.0.0/24',
           'gateway_ip': '172.2.0.1',
           'ip_version': 4}

[router]
router1 = {'name': '172.1.1-router'}
router2 = {'name': '172.2.1-router'}
router3 = {'name': '172.2.0-rt'}

[security_group]
sg1 = {'name': 'test-sg1', 'description': 'Test Tool SG'}
sg2 = {'name': 'test-sg2', 'description': 'Test Tool SG'}

[security_group_rule]
; Security Group Rule configuration guide
;  - direction: (mandatory: string(ingress or egress))
;  - port_range_min: (option: string(integer))
;  - port_range_max: (option: string(integer))
;  - ethertype: (mandatory: string(IPv4 or IPv6))
;  - protocol: (mandatory: string(tcp, udp, icmp ...))
;  - remote_ip_prefix: (option: string(ip prefix))

rule1 = {'direction': 'ingress',
         'port_range_min': '22',
         'ethertype': 'IPv4',
         'port_range_max': '22',
         'protocol': 'tcp'}

rule2 = {'direction': 'ingress',
         'ethertype': 'IPv4',
         'remote_group_id': 'default',
         'protocol': 'icmp'}

rule3 = {'direction': 'ingress',
         'port_range_min': '80',
         'ethertype': 'IPv4',
         'port_range_max': '80',
         'protocol': 'tcp'}

rule4 = {'direction': 'ingress',
         'port_range_min': '1',
         'ethertype': 'IPv4',
         'port_range_max': '65535',
         'protocol': 'tcp'}

rule5 = {'direction': 'ingress',
         'port_range_min': '1',
         'ethertype': 'IPv4',
         'port_range_max': '65535',
         'protocol': 'udp'}

[instance]
; instance configuration guide
;  - name: (mandatory: string)
;  - image: (mandatory: string)
;  - flaver: (mandatory: string)
;  - zone: (mandatory: string or '')
;  - securitygroup: (mandatory: [sg list] or [''])

instance1 = {'name': 'c1vm1',
             'user': 'cirros',
             'password': 'cubswin:)',
             'image': 'cirros-0.3.4-x86_64',
             'flavor': 'm1.tiny',
             'zone': 'compute1',
             'securitygroups': ['']}

instance2 = {'name': 'c2vm1',
             'user': 'cirros',
             'password': 'cubswin:)',
             'image': 'cirros-0.3.4-x86_64',
             'flavor': 'm1.tiny',
             'zone': 'compute2',
             'securitygroups': ['']}

instance3 = {'name': 'c1vm2',
             'user': 'cirros',
             'password': 'cubswin:)',
             'image': 'cirros-0.3.4-x86_64',
             'flavor': 'm1.tiny',
             'zone': 'compute1',
             'securitygroups': ['']}

instance4 = {'name': 'c2vm2',
             'user': 'cirros',
             'password': 'cubswin:)',
             'image': 'cirros-0.3.4-x86_64',
             'flavor': 'm1.tiny',
             'zone': 'compute2',
             'securitygroups': ['']}

instance5 = {'name': 'c1vm4',
             'user': 'cirros',
             'password': 'cubswin:)',
             'image': 'cirros-0.3.4-x86_64',
             'flavor': 'm1.tiny',
             'zone': '',
             'securitygroups': ['']}

instance6 = {'name': 'test6',
             'user': 'sdn',
             'password': 'sdn',
             'image': 'cirros-0.3.4-x86_64',
             'flavor': 'm1.tiny',
             'zone': '',
             'securitygroups': ['']}

instance7 = {'name': 'test2',
             'user': 'sdn',
             'password': 'sdn',
             'image': 'cirros-0.3.4-x86_64',
             'flavor': 'm1.tiny',
             'zone': '',
             'securitygroups': ['']}
